[tool.poetry]
name = "qats"
version = "0.0.1"
description = "Library for efficient processing and visualization of time series"
authors = [
    "Per Voie <per.voie@gmail.com>", 
    "Erling Lone <erling.lone@gmail.com>"
    ]
# Repo and docs are optional fields in the project section. Consider to keep it here or to gather 
# all URLs in the url section
repository = "https://github.com/dnvgl/qats"
documentation = "https://qats.readthedocs.io"
license = "MIT"
readme = "README.md"
include = [
    "LICENSE",
    "CHANGELOG.md"
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.13"
h5py = ">=3.5.0"
pymatreader = ">=0.0.24"
matplotlib = ">=3.3.3"
nptdms = ">=1.1.0"
numpy = ">=1.21.6"
openpyxl = ">=3.0.5"
pandas = ">=1.1.4"
qtpy = ">=1.9.0"
scipy = ">=1.7.2"   # https://docs.scipy.org/doc/scipy/dev/toolchain.html#numpy
pywin32 = {version = "^306", markers = "platform_system == 'Windows'"} # MUST check the appropriate constraint
pyside6 = "^6.6.0"

[tool.poetry.group.dev.dependencies]
build = "^1.0.3"    # needed?
pytest = "^7.4.3"
flake8 = "^6.1.0"

[tool.poetry.group.docs.dependencies]
sphinx = {version = "^7.2.6", python = ">=3.9,<3.13"}    # MUST check the appropriate constraint
furo = "^2023.9.10"
myst-parser = "^2.0.0"

[tool.poetry.scripts]
qats = "qats.cli:main"
qats-app = "qats.cli:launch_app"
# I expected the below solution to work but it is not. I will find a solution to
# launch the application without a console window.
#qats-app = {source = "qats.cli:launch_app", type = "gui"}
#qats = {source = "qats.cli:main", type = "console"}


[tool.poetry.urls]
Source = "https://github.com/dnvgl/qats"
Documentation = "https://qats.readthedocs.io"
Download = "https://pypi.org/project/qats/"
Issues = "https://github.com/dnvgl/qats/issues"

# enables dynamic versioning using Git tags
# https://sam.hooke.me/note/2023/08/poetry-automatically-generated-package-version-from-git-commit/
[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern  = "^(?P<base>\\d+\\.\\d+\\.\\d+)(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?"
format-jinja = """
    {%- if distance == 0 -%}
        {{- base -}}
    {%- else -%}
        {{- base }}.dev{{ distance }}+g{{commit}}
    {%- endif -%}
"""
format-jinja-imports = [
    { module = "datetime", item = "datetime" }
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
